buildscript {
  ext {
    mvnRepoDir = "$rootProject.buildDir/maven-publish"
  }
}

allprojects {

  if (project.hasProperty('deploy') && 'gitub' == project.property('deploy')) {

    apply plugin: 'java'

    project.javadoc.failOnError = false

    task sourcesJar(type: Jar) {
      from sourceSets.main.allJava
      classifier 'sources'
    }

    task javadocJar(type: Jar) {
      from javadoc
      classifier 'javadoc'
    }

    apply plugin: 'maven-publish'

    publishing {
      publications {
        mavenJava(MavenPublication) {
          afterEvaluate {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            //artifactId = jar.baseName

            pom {
              name = project.name
              description = project.description
              url = "https://github.com/daggerok/$project.name" as String
              licenses {
                license {
                  name = 'MIT License'
                  url = "https://github.com/daggerok/${project.name}/blob/master/LICENSE" as String
                }
              }
              developers {
                developer {
                  id = 'daggerok'
                  name = 'Maksim Kostromin'
                  email = 'daggerok@gmail.com'
                }
              }
              scm {
                connection = "scm:git:git://github.com/daggeropk/${project.name}.git" as String
                developerConnection = "scm:git:ssh://github.com/daggeropk/${project.name}.git" as String
                url = "http://github.com/daggeropk/$project.name" as String
              }
            }
          }
        }
      }
    }

    publishing {
      repositories {
        maven {
          url "$mvnRepoDir"
        }
      }
    }

    publish.dependsOn assemble

    /* // This one is required signatory to be configured (gpg stuff...)
    apply plugin: 'signing'

    signing {
      sign project.publishing.publications.mavenJava
    }
    */
  }
}
//  gitPublish {
//
//    // where to publish to (repo must exist)
//    repoUri = "git@github.com:daggerok/embedded-kafka.git"
//
//    // branch will be created if it doesn"t exist
//    branch = "$branchName"
//
//    contents {
//      from ("$mvnRepoDir") {
//        include "**/*.*"
//        into "."
//      }
//    }
//
//    // message used when committing changes
//    commitMessage = "Gradle artifacts for ${project.group}:${project.name}:$project.version" // defaults to "Generated by gradle-git-publish"
//  }
//
//  task deploy(dependsOn: gitPublishPush)
//  gitPublishPush.dependsOn publish

