dependencies {

  [
      ":modules:libraries:props",
      ":modules:libraries:web-security",

  ].each {

    annotationProcessor(project(it))
    compileOnly(project(it))
    compile(project(it))
  }

  compile("org.springframework.boot:spring-boot-starter-web")
  compile("org.springframework.boot:spring-boot-starter-mustache")
  compile("org.apache.commons:commons-io:$commonsIoVersion")

  compile("org.webjars:webjars-locator:$webjarsLocatorVersion")
  compile("org.webjars:jquery:$jqueryVersion")
  compile("org.webjars.bower:bootstrap:$bootstrapVersion")
  compile("org.webjars.bower:bootstrap-fileinput:$bootstrapFileInputVersion")
  compile("org.webjars.bower:font-awesome:$fontAwesomeVersion")
  compile("org.webjars.npm:popper.js:$popperVersion")

  //runtime("org.springframework.boot:spring-boot-devtools")
}

task jgiven(type: JavaExec, dependsOn: "test") {
  main = "com.tngtech.jgiven.report.ReportGenerator"
  args "--targetDir=./jgiven-reports/html", "--format=html"
  classpath = configurations.testCompile
  shouldRunAfter clean, assemble
}
