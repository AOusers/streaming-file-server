env:
  global:
    TERM=dumb

group: edge
dist: trusty

language: java
jdk:
  - openjdk8
  - oraclejdk8

install: true
before_install:
  - sudo apt update

  # install docker-compose
  - sudo apt install -y python-pip curl jq libxml2-utils wget
  - sudo pip install docker-compose httpie
  - sudo usermod -aG docker $(whoami)

  # kill whatever punning on postgres / rabbitmq port
  - sudo kill $(sudo lsof -t -i:5432) | true
  - sudo kill $(sudo lsof -t -i:5672) | true
  - sudo kill $(sudo lsof -t -i:27017) | true

script:
  - bash gradlew clean test jgiven build

  - export APP_UPLOAD_PATH="$PWD/application-modules/file-server/file-storage"
  - mkdir -p $APP_UPLOAD_PATH
  - cp -Rf ./application-modules/file-server/build/libs "$APP_UPLOAD_PATH/"

  # docker
  - bash gradlew allUp
  - http --auth user:password :8001/health
  - http --auth user:password -f post :8002/upload filename="build.gradle" file@build.gradle
  - http --auth user:password -f post :8002/upload filename="settings.gradle" file@settings.gradle
  - http --auth user:password :8002/api/v1/files
  - http --auth user:password :8002/
  - bash gradlew allDown

  # h2
  - bash gradlew clean assemble
  - bash ./application-modules/file-items-service/build/libs/*jar --spring.profiles.active=db-h2 &
  - sleep 25
  - bash ./application-modules/file-server/build/libs/*jar --app.upload.path=$APP_UPLOAD_PATH &
  - sleep 25
  - http --auth user:password :8001/health
  - http --auth user:password -f post :8002/upload filename="build.gradle" file@build.gradle
  - http --auth user:password -f post :8002/upload filename="settings.gradle" file@settings.gradle
  - http --auth user:password :8002/api/v1/files
  - http --auth user:password :8002/
  - >
    for APP_NAME in "file-server" "file-items-service"; do
      export APPLICATION_PID=$(ps waux|grep ${APP_NAME}|grep -v 'grep'|awk '{print $2}');
      for P_ID in "$APPLICATION_PID"; do
        if [ "''" != "'$P_ID'" ]; then
          echo "killing $P_ID";
          kill "-9" ${P_ID}
        fi
      done
    done

  # install as linux service
  - bash gradlew clean assemble postgresUp
  - cp -Rf ./application-modules/file-server/build/libs "$APP_UPLOAD_PATH/"
  - mv -f ./application-modules/file-items-service/build/libs/*.jar /tmp/file-items-service.jar
  - mv -f ./application-modules/file-server/build/libs/*.jar        /tmp/file-server.jar
  - sudo ln -s /tmp/file-items-service.jar                          /etc/init.d/file-items-service
  - sudo ln -s /tmp/file-server.jar                                 /etc/init.d/file-server
  - sudo service file-items-service                                 start
  - sleep 30
  - sudo service file-server                                        start
  - sleep 30
  - http --auth user:password :8001/health
  - http --auth user:password :8002/health
  - http --auth user:password -f post :8002/upload filename="readme" file@README.md
  - http --auth user:password :8002/api/v1/files
  - http --auth user:password :8002/
  - sudo service file-server                                        stop
  - sudo service file-items-service                                 stop
  - bash gradlew postgresDown

  - bash ./scripts/application.bash start build
  - bash ./scripts/application.bash stop build
  - bash ./scripts/application.bash start build
  - http --auth user:password -f post :8002/upload filename="build.gradle" file@build.gradle
  - http --auth user:password -f post :8002/upload filename="settings.gradle" file@settings.gradle
  - http --auth user:password -f post :8002/upload filename="readme" file@README.md
  - http --auth user:password :8001/api/v1/file-itemss
  - http --auth user:password :8002/api/v1/files
  - yes | bash ./scripts/application.bash clean build

  - bash ./scripts/application-h2.bash start build
  - bash ./scripts/application-h2.bash stop build
  - bash ./scripts/application-h2.bash start build
  - http --auth user:password :8001/health
  - http --auth user:password -f post :8002/upload filename="build.gradle" file@build.gradle
  - http --auth user:password -f post :8002/upload filename="settings.gradle" file@settings.gradle
  - http --auth user:password :8002/api/v1/files
  - http --auth user:password :8002/
  - yes | bash ./scripts/application-h2.bash clean build

after_script:
  - bash gradlew dependencyUpdates -Drevision=release
  - bash gradlew --stop

cache:
  directories:
    - $HOME/.gradle/
    - .gradle/
