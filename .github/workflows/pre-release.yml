name: pre-release
on:
  push:
    branches: [ master, main ]
    tags-ignore:
      - '*'
env:
  JAVA_VERSION: '11'
jobs:
  pre-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}
      - uses: actions/cache@v3
        with:
          path: |
            ~/.m2
            ~/.npm
            ~/.docker
            ~/.gradle
          key: ${{ runner.os }}-build-${{ hashFiles('**/*gradle*', '**/pom.xml') }}
      - run: cd $GITHUB_WORKSPACE ; ./mvnw -q clean       ; ./gradlew --no-daemon --stop
      - run: cd $GITHUB_WORKSPACE ; ./mvnw -q -P versions ; ./gradlew --no-daemon --console=plain release
      ## TODO: Publish docker images
      #- run: cd $GITHUB_WORKSPACE ; docker build --no-cache -t daggerok/file-items-service -f ./linux-services/file-items-service/Dockerfile .
      #- run: cd $GITHUB_WORKSPACE ; docker build --no-cache -t daggerok/file-server        -f ./linux-services/file-server/Dockerfile        .
      ## TODO: Publish github release with assets and update back github pages documentation to use jars from github release
      #- name: Deploy ðŸš€ GitHub Pages
      #  uses: JamesIves/github-pages-deploy-action@4.1.0
      #  with:
      #    branch: gh-pages # The branch the action should deploy to.
      #    folder: target/generated-docs # The folder the action should deploy.
      - run: cp -Rfv $GITHUB_WORKSPACE/target/generated-docs/index.pdf $GITHUB_WORKSPACE/target/release/documentation.pdf
      ## Create 'latest' pre-release
      - name: Set output VERSION
        run: echo "::set-output name=VERSION::$(./mvnw help:evaluate -Dexpression=project.version -q -DforceStdout)"
        id: refs_names
        shell: bash
      - uses: 'marvinpinto/action-automatic-releases@latest'
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "${{ steps.refs_names.outputs.VERSION }}"
          prerelease: true
          title: "Latest (${{ steps.refs_names.outputs.VERSION }}) build"
          files: |
            target/release/**/*
            LICENSE
            *.md
