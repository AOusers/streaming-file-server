name: "release"
on:
  push:
    tags:
      - "*"
  workflow_dispatch:
    inputs:
      trigger:
        description: Type m to triggre release
        required: false
        default: ""
env:
  JAVA_VERSION: "11"
jobs:
  release:
    if: startsWith(github.event.inputs.trigger, 'm')
      || startsWith(github.event.inputs.trigger, 'M')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v2
        with:
          distribution: "temurin"
          java-version: ${{ env.JAVA_VERSION }}
      - uses: actions/cache@v3
        with:
          path: |
            ~/.m2
            ~/.npm
            ~/.docker
            ~/.gradle
          key: ${{ runner.os }}-build-${{ hashFiles('**/*gradle*', '**/pom.xml') }}
      - run: cd $GITHUB_WORKSPACE ; ./mvnw -q clean       ; ./gradlew --no-daemon --stop
      - run: cd $GITHUB_WORKSPACE ; ./mvnw -q -P versions ; ./gradlew --no-daemon --console=plain release
      ## TODO: Publish docker images
      ## TODO: Publish github release with assets and update back github pages documentation to use jars from github release
      - run: cp -Rfv $GITHUB_WORKSPACE/target/generated-docs/index.pdf $GITHUB_WORKSPACE/target/release/documentation.pdf
      ## Create "latest" pre-release
      - name: Set output VERSION
        run: echo "::set-output name=VERSION::$(./gradlew --no-daemon --console=plain version -q)"
        id: refs_names
        shell: bash
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "${{ steps.refs_names.outputs.VERSION }}"
          prerelease: false
          title: "v${{ steps.refs_names.outputs.VERSION }}"
          files: |
            target/release/**/*
            LICENSE
            *.md
