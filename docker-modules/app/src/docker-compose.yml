version: "2.1"

services:

  db:
    image: healthcheck/postgres:alpine
    ports: ["5432:5432"]
    volumes: ["db-data:/var/lib/postgresql/data"]
    environment:
      POSTGRES_DB: db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    networks: [app-backing-services]

  file-items-rest-service:
    build:
      context: ../../..
      dockerfile: ./docker-modules/app/src/file-items-rest-service/Dockerfile
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_HOST: db
    image: 127.0.0.1:5000/file-items-rest-service
    ports: ["8001:8001"]
    volumes: ["file-items-rest-service-data:/tmp/app"]
    networks: [app-backing-services]

  streaming-file-server:
    build:
      context: ../../..
      dockerfile: ./docker-modules/app/src/streaming-file-server/Dockerfile
    depends_on:
      file-items-rest-service:
        condition: service_healthy
    environment:
      FILE_ITEMS_REST_SERVICE_HOST: file-items-rest-service
      FILE_ITEMS_REST_SERVICE_PORT: 8001
      #APP_UPLOAD_PATH: /tmp/file-storage
    image: 127.0.0.1:5000/streaming-file-server
    ports: ["8002:8002"]
    volumes:
      - ./file-storage:/tmp/file-storage:rw
      - ./build:/tmp/file-storage
      - streaming-file-server-data:/tmp/app
    networks: [app-backing-services]

volumes:
  db-data: {}
  file-items-rest-service-data: {}
  streaming-file-server-data: {}

networks:
  app-backing-services:
    driver: bridge
