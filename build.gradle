buildscript {
  ext {
    baseName = "streaming-file-server"

    environmentFileDir = "."
    propertiesPluginEnvironmentNameProperty = "env"

    springBootVersion = "1.5.7.RELEASE"
    commonsIoVer = "1.3.2"
    querydslVer = "4.1.4"
    vavrVer = "0.9.1"
    jqueryVer = "3.2.1"
    bootstrapVer = "3.3.7"
    bootstrapFileInputVer = "4.4.5"
    fontAwesomeVer = "4.7.0"
    powermockitoVer = "1.7.3"
    jgivenVer = "0.15.3"
    webjarsLocatorVer = "0.32-1"
  }
}

plugins {
  id "java"
  id "idea"
  id "maven"
  id "application"
  id "cn.bestwu.propdeps" version "0.0.10"
  id "cn.bestwu.propdeps-idea" version "0.0.10"
  id "cn.bestwu.propdeps-maven" version "0.0.10"
  id "cn.bestwu.propdeps-eclipse" version "0.0.10"
  id "org.springframework.boot" version "1.5.7.RELEASE"
  id "io.spring.dependency-management" version "1.0.3.RELEASE"
  id "com.ewerk.gradle.plugins.querydsl" version "1.0.9"
  id "com.github.ben-manes.versions" version "0.15.0"
  id "net.saliman.properties" version "1.4.6"
}

version "2.1.0"
group "daggerok"
sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8

repositories {
  mavenLocal()
  mavenCentral()
  jcenter()
}

dependencies {
  //// because of QueryDSL:
  // compileOnly "org.projectlombok:lombok"
  // testCompileOnly "org.projectlombok:lombok"
  compile "org.projectlombok:lombok"

  compile "org.springframework.boot:spring-boot-starter-mustache",
      "org.springframework.boot:spring-boot-starter-data-jpa",
      "org.springframework.social:spring-social-facebook",
      "com.fasterxml.jackson.core:jackson-databind",
      "com.fasterxml.jackson.datatype:jackson-datatype-jsr310",
      "org.apache.commons:commons-io:$commonsIoVer",

      "com.querydsl:querydsl-core:$querydslVer",
      "com.querydsl:querydsl-jpa:$querydslVer",
      "com.querydsl:querydsl-apt:$querydslVer",

      "org.springframework.boot:spring-boot-devtools",
      "io.vavr:vavr:$vavrVer",

      "org.webjars:webjars-locator:$webjarsLocatorVer",
      "org.webjars:jquery:$jqueryVer",
      "org.webjars:bootstrap:$bootstrapVer",
      "org.webjars.bower:bootstrap-fileinput:$bootstrapFileInputVer",
      "org.webjars.bower:font-awesome:$fontAwesomeVer"

  runtime "org.postgresql:postgresql",
      "com.h2database:h2"

  testCompile "org.springframework.boot:spring-boot-starter-test",
      "org.powermock:powermock-module-junit4:$powermockitoVer",
      "org.powermock:powermock-api-mockito:$powermockitoVer",
      "com.tngtech.jgiven:jgiven-junit:$jgivenVer",
      "com.tngtech.jgiven:jgiven-html5-report:$jgivenVer"
}

dependencyManagement {
  imports {
    mavenBom "org.springframework.boot:spring-boot-starter-parent:$springBootVersion"
  }
}

springBoot { executable = true }
bootRun { systemProperties = System.properties }

task jgiven(type: JavaExec, dependsOn: "test") {
  main = "com.tngtech.jgiven.report.ReportGenerator"
  args "--targetDir=./jgiven-reports/html", "--format=html"
  classpath = configurations.testCompile
}

querydsl {
  querydslSourcesDir = "src/main/gen"
  querydslDefault = true
  jpa = true
}

sourceSets {
  generated
  main
  test
}

clean {
  ["app", "docker"].each { id ->
    dependsOn ":modules:$id:${id}Down"
  }
  doLast {
    delete querydsl.querydslSourcesDir
  }
}

task pgUp(dependsOn: [":modules:docker:composeUp"])
task pgDown(dependsOn: [":modules:docker:composeDown"])

[test, build, bootRun].each { task ->
  task.dependsOn assemble, pgUp
  task.shouldRunAfter assemble, pgUp
  ["app", "docker"].each { id ->
    task.finalizedBy ":modules:$id:${id}Down"
  }
}

wrapper {
  gradleVersion = "4.2.1"
}
